{"ast":null,"code":"var _jsxFileName = \"/Users/leejoowon/Documents/GitHub/Capstone/src/components/KakaoMap.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  kakao\n} = window;\nfunction KakaoMap(props) {\n  _s();\n  useEffect(() => {\n    const container = document.getElementById(\"map\");\n    if (props.placeData && Array.isArray(props.placeData)) {\n      const markerPositions = props.placeData.map(item => {\n        const latitude = item.latitude;\n        const longitude = item.longitude;\n        return new kakao.maps.LatLng(latitude, longitude);\n      });\n      const bounds = new kakao.maps.LatLngBounds();\n      markerPositions.forEach(position => {\n        bounds.extend(position);\n      });\n      const center = getCenter(bounds);\n      const options = {\n        center: center,\n        level: 9\n      };\n      const map = new kakao.maps.Map(container, options);\n      const overlays = [];\n      const markers = [];\n      props.placeData.forEach((place, index) => {\n        const latitude = place.latitude;\n        const longitude = place.longitude;\n        const position = new kakao.maps.LatLng(latitude, longitude);\n        const marker = addMarker(position, index, place.title);\n        markers.push(marker);\n\n        // 장소명 오버레이\n        const overlayContent = `<div class=\"overlay\">${place.title}</div>`;\n        const overlayPosition = marker.getPosition();\n        const overlay = new kakao.maps.CustomOverlay({\n          content: overlayContent,\n          position: overlayPosition,\n          yAnchor: 2.5,\n          map: map\n        });\n        overlays.push(overlay);\n        kakao.maps.event.addListener(marker, \"click\", function () {\n          bringOverlayToFront(overlay);\n        });\n      });\n\n      // 경로 생성\n      const drawLinePath = props.routeData.map(item => {\n        const linePath = [];\n        for (const road of item.routes[0].sections[0].roads) {\n          const r = road.vertexes;\n          for (let i = 0; i < r.length; i += 2) {\n            linePath.push(new kakao.maps.LatLng(r[i + 1], r[i]));\n          }\n        }\n        return linePath;\n      });\n\n      // 경로 생성\n      drawLinePath.forEach(linePath => {\n        const polyline = new kakao.maps.Polyline({\n          path: linePath,\n          strokeWeight: 2,\n          strokeColor: \"blue\",\n          strokeOpacity: 0.7,\n          strokeStyle: \"solid\"\n        });\n        polyline.setMap(map);\n      });\n\n      // 마커 표시 부분\n      function addMarker(position, idx, title) {\n        var imageSrc = \"https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png\";\n        var imageSize = new kakao.maps.Size(36, 37);\n        var imgOptions = {\n          spriteSize: new kakao.maps.Size(36, 691),\n          spriteOrigin: new kakao.maps.Point(0, idx * 46 + 10),\n          offset: new kakao.maps.Point(13, 37)\n        };\n        var markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imgOptions);\n        var marker = new kakao.maps.Marker({\n          position: position,\n          image: markerImage\n        });\n        marker.setMap(map);\n        return marker;\n      }\n      function bringOverlayToFront(clickedOverlay) {\n        overlays.forEach(overlay => {\n          if (overlay === clickedOverlay) {\n            overlay.setZIndex(1);\n          } else {\n            overlay.setZIndex(0);\n          }\n        });\n      }\n    }\n  }, [props.placeData]);\n  function getCenter(bounds) {\n    const ne = bounds.getNorthEast();\n    const sw = bounds.getSouthWest();\n    const centerLat = (ne.getLat() + sw.getLat()) / 2;\n    const centerLng = (ne.getLng() + sw.getLng()) / 2;\n    return new kakao.maps.LatLng(centerLat, centerLng);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 10\n  }, this);\n}\n_s(KakaoMap, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = KakaoMap;\nexport default KakaoMap;\nvar _c;\n$RefreshReg$(_c, \"KakaoMap\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","kakao","window","KakaoMap","props","_s","container","document","getElementById","placeData","Array","isArray","markerPositions","map","item","latitude","longitude","maps","LatLng","bounds","LatLngBounds","forEach","position","extend","center","getCenter","options","level","Map","overlays","markers","place","index","marker","addMarker","title","push","overlayContent","overlayPosition","getPosition","overlay","CustomOverlay","content","yAnchor","event","addListener","bringOverlayToFront","drawLinePath","routeData","linePath","road","routes","sections","roads","r","vertexes","i","length","polyline","Polyline","path","strokeWeight","strokeColor","strokeOpacity","strokeStyle","setMap","idx","imageSrc","imageSize","Size","imgOptions","spriteSize","spriteOrigin","Point","offset","markerImage","MarkerImage","Marker","image","clickedOverlay","setZIndex","ne","getNorthEast","sw","getSouthWest","centerLat","getLat","centerLng","getLng","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/leejoowon/Documents/GitHub/Capstone/src/components/KakaoMap.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\n\nconst { kakao } = window;\n\nfunction KakaoMap(props) {\n  useEffect(() => {\n    const container = document.getElementById(\"map\");\n\n    if (props.placeData && Array.isArray(props.placeData)) {\n      const markerPositions = props.placeData.map((item) => {\n        const latitude = item.latitude;\n        const longitude = item.longitude;\n        return new kakao.maps.LatLng(latitude, longitude);\n      });\n\n      const bounds = new kakao.maps.LatLngBounds();\n      markerPositions.forEach((position) => {\n        bounds.extend(position);\n      });\n\n      const center = getCenter(bounds);\n\n      const options = {\n        center: center,\n        level: 9,\n      };\n\n      const map = new kakao.maps.Map(container, options);\n\n      const overlays = [];\n      const markers = [];\n\n      props.placeData.forEach((place, index) => {\n        const latitude = place.latitude;\n        const longitude = place.longitude;\n\n        const position = new kakao.maps.LatLng(latitude, longitude);\n        const marker = addMarker(position, index, place.title);\n\n        markers.push(marker);\n\n        // 장소명 오버레이\n        const overlayContent = `<div class=\"overlay\">${place.title}</div>`;\n        const overlayPosition = marker.getPosition();\n\n        const overlay = new kakao.maps.CustomOverlay({\n          content: overlayContent,\n          position: overlayPosition,\n          yAnchor: 2.5,\n          map: map,\n        });\n\n        overlays.push(overlay);\n\n        kakao.maps.event.addListener(marker, \"click\", function () {\n          bringOverlayToFront(overlay);\n        });\n      });\n\n      // 경로 생성\n      const drawLinePath = props.routeData.map((item) => {\n        const linePath = [];\n        for (const road of item.routes[0].sections[0].roads) {\n          const r = road.vertexes;\n          for (let i = 0; i < r.length; i += 2) {\n            linePath.push(new kakao.maps.LatLng(r[i + 1], r[i]));\n          }\n        }\n        return linePath;\n      });\n\n      // 경로 생성\n      drawLinePath.forEach((linePath) => {\n        const polyline = new kakao.maps.Polyline({\n          path: linePath,\n          strokeWeight: 2,\n          strokeColor: \"blue\",\n          strokeOpacity: 0.7,\n          strokeStyle: \"solid\",\n        });\n\n        polyline.setMap(map);\n      });\n\n      // 마커 표시 부분\n      function addMarker(position, idx, title) {\n        var imageSrc =\n          \"https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png\";\n        var imageSize = new kakao.maps.Size(36, 37);\n        var imgOptions = {\n          spriteSize: new kakao.maps.Size(36, 691),\n          spriteOrigin: new kakao.maps.Point(0, idx * 46 + 10),\n          offset: new kakao.maps.Point(13, 37),\n        };\n        var markerImage = new kakao.maps.MarkerImage(\n          imageSrc,\n          imageSize,\n          imgOptions\n        );\n        var marker = new kakao.maps.Marker({\n          position: position,\n          image: markerImage,\n        });\n\n        marker.setMap(map);\n        return marker;\n      }\n\n      function bringOverlayToFront(clickedOverlay) {\n        overlays.forEach((overlay) => {\n          if (overlay === clickedOverlay) {\n            overlay.setZIndex(1);\n          } else {\n            overlay.setZIndex(0);\n          }\n        });\n      }\n    }\n  }, [props.placeData]);\n\n  function getCenter(bounds) {\n    const ne = bounds.getNorthEast();\n    const sw = bounds.getSouthWest();\n    const centerLat = (ne.getLat() + sw.getLat()) / 2;\n    const centerLng = (ne.getLng() + sw.getLng()) / 2;\n    return new kakao.maps.LatLng(centerLat, centerLng);\n  }\n\n  return <div id=\"map\"></div>;\n}\n\nexport default KakaoMap;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}