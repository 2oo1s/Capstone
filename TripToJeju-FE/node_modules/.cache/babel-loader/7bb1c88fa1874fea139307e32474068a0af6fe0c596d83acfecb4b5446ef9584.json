{"ast":null,"code":"var _jsxFileName = \"/Users/leejoowon/Documents/GitHub/Capstone/src/components/KakaoMap.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  kakao\n} = window;\nfunction KakaoMap(props) {\n  _s();\n  useEffect(() => {\n    const container = document.getElementById(\"map\");\n    if (props.responseData && Array.isArray(props.responseData)) {\n      const markerPositions = props.responseData.map(item => {\n        const latitude = item.latitude;\n        const longitude = item.longitude;\n        return new kakao.maps.LatLng(latitude, longitude);\n      });\n      const bounds = new kakao.maps.LatLngBounds();\n      markerPositions.forEach(position => {\n        bounds.extend(position);\n      });\n\n      // 계산한 중점을 좌표 중심으로 설정\n      const center = getCenter(bounds);\n      const options = {\n        center: center,\n        level: 9\n      };\n      const map = new kakao.maps.Map(container, options);\n      props.responseData.forEach(place => {\n        const latitude = place.latitude;\n        const longitude = place.longitude;\n        const marker = new kakao.maps.Marker({\n          position: new kakao.maps.LatLng(latitude, longitude)\n        });\n        const label = document.createElement(\"div\");\n        label.className = \"marker-label\";\n        label.innerText = String(index + 1);\n        const customOverlay = new kakao.maps.CustomOverlay({\n          content: label,\n          position: new kakao.maps.LatLng(latitude, longitude),\n          yAnchor: 1 // 라벨의 기준점을 아래쪽으로 설정합니다.\n        });\n\n        customOverlay.setMap(map);\n      });\n    }\n  }, [props.responseData]);\n\n  // 표시한 장소들의 중심을 계산\n  function getCenter(bounds) {\n    const ne = bounds.getNorthEast();\n    const sw = bounds.getSouthWest();\n    const centerLat = (ne.getLat() + sw.getLat()) / 2;\n    const centerLng = (ne.getLng() + sw.getLng()) / 2;\n    return new kakao.maps.LatLng(centerLat, centerLng);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 10\n  }, this);\n}\n_s(KakaoMap, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = KakaoMap;\nexport default KakaoMap;\nvar _c;\n$RefreshReg$(_c, \"KakaoMap\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","kakao","window","KakaoMap","props","_s","container","document","getElementById","responseData","Array","isArray","markerPositions","map","item","latitude","longitude","maps","LatLng","bounds","LatLngBounds","forEach","position","extend","center","getCenter","options","level","Map","place","marker","Marker","label","createElement","className","innerText","String","index","customOverlay","CustomOverlay","content","yAnchor","setMap","ne","getNorthEast","sw","getSouthWest","centerLat","getLat","centerLng","getLng","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/leejoowon/Documents/GitHub/Capstone/src/components/KakaoMap.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\n\nconst { kakao } = window;\n\nfunction KakaoMap(props) {\n  useEffect(() => {\n    const container = document.getElementById(\"map\");\n\n    if (props.responseData && Array.isArray(props.responseData)) {\n      const markerPositions = props.responseData.map((item) => {\n        const latitude = item.latitude;\n        const longitude = item.longitude;\n        return new kakao.maps.LatLng(latitude, longitude);\n      });\n\n      const bounds = new kakao.maps.LatLngBounds();\n      markerPositions.forEach((position) => {\n        bounds.extend(position);\n      });\n      \n      // 계산한 중점을 좌표 중심으로 설정\n      const center = getCenter(bounds);\n\n      const options = {\n        center: center,\n        level: 9,\n      };\n\n      const map = new kakao.maps.Map(container, options);\n\n      props.responseData.forEach((place) => {\n        const latitude = place.latitude;\n        const longitude = place.longitude;\n\n        const marker = new kakao.maps.Marker({\n          position: new kakao.maps.LatLng(latitude, longitude),\n        });\n        const label = document.createElement(\"div\");\n        label.className = \"marker-label\";\n        label.innerText = String(index + 1);\n\n        const customOverlay = new kakao.maps.CustomOverlay({\n          content: label,\n          position: new kakao.maps.LatLng(latitude, longitude),\n          yAnchor: 1, // 라벨의 기준점을 아래쪽으로 설정합니다.\n        });\n        \n        customOverlay.setMap(map);\n      });\n    }\n  }, [props.responseData]);\n\n  // 표시한 장소들의 중심을 계산\n  function getCenter(bounds) {\n    const ne = bounds.getNorthEast();\n    const sw = bounds.getSouthWest();\n    const centerLat = (ne.getLat() + sw.getLat()) / 2;\n    const centerLng = (ne.getLng() + sw.getLng()) / 2;\n    return new kakao.maps.LatLng(centerLat, centerLng);\n  }\n\n  return <div id=\"map\"></div>;\n}\n\nexport default KakaoMap;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}