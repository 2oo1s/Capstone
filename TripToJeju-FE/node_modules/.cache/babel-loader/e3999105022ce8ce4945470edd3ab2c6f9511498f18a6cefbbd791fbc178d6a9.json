{"ast":null,"code":"var _jsxFileName = \"/Users/leejoowon/Documents/GitHub/Capstone/src/components/KakaoMap.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  kakao\n} = window;\nfunction KakaoMap(props) {\n  _s();\n  useEffect(() => {\n    const container = document.getElementById(\"map\");\n    if (props.placeData && Array.isArray(props.placeData)) {\n      const markerPositions = props.placeData.map(item => {\n        const latitude = item.latitude;\n        const longitude = item.longitude;\n        return new kakao.maps.LatLng(latitude, longitude);\n      });\n      const bounds = new kakao.maps.LatLngBounds();\n      markerPositions.forEach(position => {\n        bounds.extend(position);\n      });\n      const center = getCenter(bounds);\n      const options = {\n        center: center,\n        level: 9\n      };\n      const map = new kakao.maps.Map(container, options);\n      const overlays = [];\n      const markers = [];\n      props.placeData.forEach((place, index) => {\n        const latitude = place.latitude;\n        const longitude = place.longitude;\n        const position = new kakao.maps.LatLng(latitude, longitude);\n        const marker = addMarker(position, index, place.title);\n        markers.push(marker);\n\n        // 장소명 오버레이\n        const overlayContent = `<div class=\"overlay\">${place.title}</div>`;\n        const overlayPosition = marker.getPosition();\n        const overlay = new kakao.maps.CustomOverlay({\n          content: overlayContent,\n          position: overlayPosition,\n          yAnchor: 2.5,\n          map: map\n        });\n        overlays.push(overlay);\n        kakao.maps.event.addListener(marker, \"click\", function () {\n          bringOverlayToFront(overlay);\n        });\n      });\n      const linePath = markerPositions;\n\n      // 경로 생성\n      const polyline = new kakao.maps.Polyline({\n        path: linePath,\n        strokeWeight: 2,\n        strokeColor: 'blue',\n        strokeOpacity: 0.7,\n        strokeStyle: 'shortdash'\n      });\n      polyline.setMap(map);\n      function addMarker(position, idx, title) {\n        var imageSrc = 'https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png';\n        var imageSize = new kakao.maps.Size(36, 37);\n        var imgOptions = {\n          spriteSize: new kakao.maps.Size(36, 691),\n          spriteOrigin: new kakao.maps.Point(0, idx * 46 + 10),\n          offset: new kakao.maps.Point(13, 37)\n        };\n        var markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imgOptions);\n        var marker = new kakao.maps.Marker({\n          position: position,\n          image: markerImage\n        });\n        marker.setMap(map);\n        return marker;\n      }\n      function bringOverlayToFront(clickedOverlay) {\n        overlays.forEach(overlay => {\n          if (overlay === clickedOverlay) {\n            overlay.setZIndex(1);\n          } else {\n            overlay.setZIndex(0);\n          }\n        });\n      }\n    }\n  }, [props.placeData]);\n  function getCenter(bounds) {\n    const ne = bounds.getNorthEast();\n    const sw = bounds.getSouthWest();\n    const centerLat = (ne.getLat() + sw.getLat()) / 2;\n    const centerLng = (ne.getLng() + sw.getLng()) / 2;\n    return new kakao.maps.LatLng(centerLat, centerLng);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 10\n  }, this);\n}\n_s(KakaoMap, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = KakaoMap;\nexport default KakaoMap;\nvar _c;\n$RefreshReg$(_c, \"KakaoMap\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","kakao","window","KakaoMap","props","_s","container","document","getElementById","placeData","Array","isArray","markerPositions","map","item","latitude","longitude","maps","LatLng","bounds","LatLngBounds","forEach","position","extend","center","getCenter","options","level","Map","overlays","markers","place","index","marker","addMarker","title","push","overlayContent","overlayPosition","getPosition","overlay","CustomOverlay","content","yAnchor","event","addListener","bringOverlayToFront","linePath","polyline","Polyline","path","strokeWeight","strokeColor","strokeOpacity","strokeStyle","setMap","idx","imageSrc","imageSize","Size","imgOptions","spriteSize","spriteOrigin","Point","offset","markerImage","MarkerImage","Marker","image","clickedOverlay","setZIndex","ne","getNorthEast","sw","getSouthWest","centerLat","getLat","centerLng","getLng","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/leejoowon/Documents/GitHub/Capstone/src/components/KakaoMap.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\n\nconst { kakao } = window;\n\nfunction KakaoMap(props) {\n  useEffect(() => {\n    const container = document.getElementById(\"map\");\n\n    if (props.placeData && Array.isArray(props.placeData)) {\n      const markerPositions = props.placeData.map((item) => {\n        const latitude = item.latitude;\n        const longitude = item.longitude;\n        return new kakao.maps.LatLng(latitude, longitude);\n      });\n\n      const bounds = new kakao.maps.LatLngBounds();\n      markerPositions.forEach((position) => {\n        bounds.extend(position);\n      });\n\n      const center = getCenter(bounds);\n\n      const options = {\n        center: center,\n        level: 9,\n      };\n\n      const map = new kakao.maps.Map(container, options);\n\n      const overlays = [];\n      const markers = [];\n\n      props.placeData.forEach((place, index) => {\n        const latitude = place.latitude;\n        const longitude = place.longitude;\n\n        const position = new kakao.maps.LatLng(latitude, longitude);\n        const marker = addMarker(position, index, place.title);\n\n        markers.push(marker);\n\n        // 장소명 오버레이\n        const overlayContent = `<div class=\"overlay\">${place.title}</div>`;\n        const overlayPosition = marker.getPosition();\n\n        const overlay = new kakao.maps.CustomOverlay({\n          content: overlayContent,\n          position: overlayPosition,\n          yAnchor: 2.5,\n          map: map,\n        });\n\n        overlays.push(overlay);\n\n        kakao.maps.event.addListener(marker, \"click\", function () {\n          bringOverlayToFront(overlay);\n        });\n      });\n\n      const linePath = markerPositions;\n\n      // 경로 생성\n      const polyline = new kakao.maps.Polyline({\n        path: linePath,\n        strokeWeight: 2,\n        strokeColor: 'blue',\n        strokeOpacity: 0.7,\n        strokeStyle: 'shortdash',\n      });\n\n      polyline.setMap(map);\n\n      function addMarker(position, idx, title) {\n        var imageSrc = 'https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png';\n        var imageSize = new kakao.maps.Size(36, 37);\n        var imgOptions = {\n          spriteSize: new kakao.maps.Size(36, 691),\n          spriteOrigin: new kakao.maps.Point(0, (idx * 46) + 10),\n          offset: new kakao.maps.Point(13, 37)\n        };\n        var markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imgOptions);\n        var marker = new kakao.maps.Marker({\n          position: position,\n          image: markerImage\n        });\n\n        marker.setMap(map);\n        return marker;\n      }\n\n      function bringOverlayToFront(clickedOverlay) {\n        overlays.forEach((overlay) => {\n          if (overlay === clickedOverlay) {\n            overlay.setZIndex(1);\n          } else {\n            overlay.setZIndex(0);\n          }\n        });\n      }\n    }\n  }, [props.placeData]);\n\n  function getCenter(bounds) {\n    const ne = bounds.getNorthEast();\n    const sw = bounds.getSouthWest();\n    const centerLat = (ne.getLat() + sw.getLat()) / 2;\n    const centerLng = (ne.getLng() + sw.getLng()) / 2;\n    return new kakao.maps.LatLng(centerLat, centerLng);\n  }\n\n  return <div id=\"map\"></div>;\n}\n\nexport default KakaoMap;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}