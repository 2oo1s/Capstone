{"ast":null,"code":"var _jsxFileName = \"/Users/leejoowon/Documents/GitHub/Capstone/src/components/KakaoMap.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  kakao\n} = window;\nfunction KakaoMap(props) {\n  _s();\n  useEffect(() => {\n    const container = document.getElementById(\"map\");\n    if (props.responseData && Array.isArray(props.responseData)) {\n      const markerPositions = props.responseData.map(item => {\n        const latitude = item.latitude;\n        const longitude = item.longitude;\n        return new kakao.maps.LatLng(latitude, longitude);\n      });\n      const bounds = new kakao.maps.LatLngBounds();\n      markerPositions.forEach(position => {\n        bounds.extend(position);\n      });\n      const center = getCenter(bounds);\n      const options = {\n        center: center,\n        level: 9\n      };\n      const map = new kakao.maps.Map(container, options);\n      const overlays = [];\n      props.responseData.forEach((place, index) => {\n        const latitude = place.latitude;\n        const longitude = place.longitude;\n        const markerImage = index === 0 ? \"../assests/start_end_marker.jpeg\" : index === props.responseData.length - 1 ? \"../assests/start_end_marker.jpeg\" : null;\n        const markerSize = new kakao.maps.Size(64, 69);\n        const markerOption = {\n          offset: new kakao.maps.Point(27, 69)\n        };\n        const newMarker = new kakao.maps.MarkerImage(markerImage, markerSize, markerOption);\n        const marker = new kakao.maps.Marker({\n          position: new kakao.maps.LatLng(latitude, longitude),\n          image: markerImage\n        });\n        marker.setMap(map);\n\n        // 장소명 오버레이\n        const overlayContent = `<div class=\"overlay\">${place.title}</div>`;\n        const overlayPosition = marker.getPosition();\n        const overlay = new kakao.maps.CustomOverlay({\n          content: overlayContent,\n          position: overlayPosition,\n          yAnchor: 2.5,\n          map: map // 오버레이를 지도에 표시\n        });\n\n        overlays.push(overlay);\n        kakao.maps.event.addListener(marker, \"click\", function () {\n          bringOverlayToFront(overlay);\n        });\n      });\n      function bringOverlayToFront(clickedOverlay) {\n        overlays.forEach(overlay => {\n          if (overlay === clickedOverlay) {\n            overlay.setZIndex(1);\n          } else {\n            overlay.setZIndex(0);\n          }\n        });\n      }\n    }\n  }, [props.responseData]);\n  function getCenter(bounds) {\n    const ne = bounds.getNorthEast();\n    const sw = bounds.getSouthWest();\n    const centerLat = (ne.getLat() + sw.getLat()) / 2;\n    const centerLng = (ne.getLng() + sw.getLng()) / 2;\n    return new kakao.maps.LatLng(centerLat, centerLng);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 10\n  }, this);\n}\n_s(KakaoMap, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = KakaoMap;\nexport default KakaoMap;\nvar _c;\n$RefreshReg$(_c, \"KakaoMap\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","kakao","window","KakaoMap","props","_s","container","document","getElementById","responseData","Array","isArray","markerPositions","map","item","latitude","longitude","maps","LatLng","bounds","LatLngBounds","forEach","position","extend","center","getCenter","options","level","Map","overlays","place","index","markerImage","length","markerSize","Size","markerOption","offset","Point","newMarker","MarkerImage","marker","Marker","image","setMap","overlayContent","title","overlayPosition","getPosition","overlay","CustomOverlay","content","yAnchor","push","event","addListener","bringOverlayToFront","clickedOverlay","setZIndex","ne","getNorthEast","sw","getSouthWest","centerLat","getLat","centerLng","getLng","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/leejoowon/Documents/GitHub/Capstone/src/components/KakaoMap.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\n\nconst { kakao } = window;\n\nfunction KakaoMap(props) {\n  useEffect(() => {\n    const container = document.getElementById(\"map\");\n\n    if (props.responseData && Array.isArray(props.responseData)) {\n      const markerPositions = props.responseData.map((item) => {\n        const latitude = item.latitude;\n        const longitude = item.longitude;\n        return new kakao.maps.LatLng(latitude, longitude);\n      });\n\n      const bounds = new kakao.maps.LatLngBounds();\n      markerPositions.forEach((position) => {\n        bounds.extend(position);\n      });\n\n      const center = getCenter(bounds);\n\n      const options = {\n        center: center,\n        level: 9,\n      };\n\n      const map = new kakao.maps.Map(container, options);\n\n      const overlays = [];\n\n      props.responseData.forEach((place, index) => {\n        const latitude = place.latitude;\n        const longitude = place.longitude;\n\n        const markerImage =\n          index === 0\n            ? \"../assests/start_end_marker.jpeg\"\n            : index === props.responseData.length - 1\n            ? \"../assests/start_end_marker.jpeg\"\n            : null;\n        const markerSize = new kakao.maps.Size(64, 69);\n        const markerOption = { offset: new kakao.maps.Point(27, 69) };\n        const newMarker = new kakao.maps.MarkerImage(\n          markerImage,\n          markerSize,\n          markerOption\n        );\n        const marker = new kakao.maps.Marker({\n          position: new kakao.maps.LatLng(latitude, longitude),\n          image: markerImage,\n        });\n\n        marker.setMap(map);\n\n        // 장소명 오버레이\n        const overlayContent = `<div class=\"overlay\">${place.title}</div>`;\n        const overlayPosition = marker.getPosition();\n\n        const overlay = new kakao.maps.CustomOverlay({\n          content: overlayContent,\n          position: overlayPosition,\n          yAnchor: 2.5,\n          map: map, // 오버레이를 지도에 표시\n        });\n\n        overlays.push(overlay);\n\n        kakao.maps.event.addListener(marker, \"click\", function () {\n          bringOverlayToFront(overlay);\n        });\n      });\n\n      function bringOverlayToFront(clickedOverlay) {\n        overlays.forEach((overlay) => {\n          if (overlay === clickedOverlay) {\n            overlay.setZIndex(1);\n          } else {\n            overlay.setZIndex(0);\n          }\n        });\n      }\n    }\n  }, [props.responseData]);\n\n  function getCenter(bounds) {\n    const ne = bounds.getNorthEast();\n    const sw = bounds.getSouthWest();\n    const centerLat = (ne.getLat() + sw.getLat()) / 2;\n    const centerLng = (ne.getLng() + sw.getLng()) / 2;\n    return new kakao.maps.LatLng(centerLat, centerLng);\n  }\n\n  return <div id=\"map\"></div>;\n}\n\nexport default KakaoMap;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}