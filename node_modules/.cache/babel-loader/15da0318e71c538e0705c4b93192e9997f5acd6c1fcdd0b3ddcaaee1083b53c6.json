{"ast":null,"code":"var _jsxFileName = \"/Users/leejoowon/Documents/GitHub/Capstone/src/components/KakaoMap.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  kakao\n} = window;\nfunction KakaoMap(props) {\n  _s();\n  useEffect(() => {\n    const container = document.getElementById(\"map\");\n    if (props.responseData && Array.isArray(props.responseData)) {\n      const markerPositions = props.responseData.map((item, index) => {\n        const latitude = item.latitude;\n        const longitude = item.longitude;\n        const marker = new kakao.maps.Marker({\n          position: new kakao.maps.LatLng(latitude, longitude),\n          title: String(index + 1) // 순서를 마커의 title로 설정합니다.\n        });\n\n        marker.setMap(map); // 마커를 지도에 추가합니다.\n        return marker;\n      });\n      const bounds = new kakao.maps.LatLngBounds();\n      markerPositions.forEach(marker => {\n        bounds.extend(marker.getPosition());\n      });\n      const center = getCenterFromBounds(bounds);\n      const options = {\n        center: center,\n        level: 10\n      };\n      const map = new kakao.maps.Map(container, options);\n    }\n  }, [props.responseData]);\n  function getCenterFromBounds(bounds) {\n    const ne = bounds.getNorthEast();\n    const sw = bounds.getSouthWest();\n    const centerLat = (ne.getLat() + sw.getLat()) / 2;\n    const centerLng = (ne.getLng() + sw.getLng()) / 2;\n    return new kakao.maps.LatLng(centerLat, centerLng);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 10\n  }, this);\n}\n_s(KakaoMap, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = KakaoMap;\nexport default KakaoMap;\nvar _c;\n$RefreshReg$(_c, \"KakaoMap\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","kakao","window","KakaoMap","props","_s","container","document","getElementById","responseData","Array","isArray","markerPositions","map","item","index","latitude","longitude","marker","maps","Marker","position","LatLng","title","String","setMap","bounds","LatLngBounds","forEach","extend","getPosition","center","getCenterFromBounds","options","level","Map","ne","getNorthEast","sw","getSouthWest","centerLat","getLat","centerLng","getLng","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/leejoowon/Documents/GitHub/Capstone/src/components/KakaoMap.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\n\nconst { kakao } = window;\n\nfunction KakaoMap(props) {\n  useEffect(() => {\n    const container = document.getElementById(\"map\");\n\n    if (props.responseData && Array.isArray(props.responseData)) {\n      const markerPositions = props.responseData.map((item, index) => {\n        const latitude = item.latitude;\n        const longitude = item.longitude;\n\n        const marker = new kakao.maps.Marker({\n          position: new kakao.maps.LatLng(latitude, longitude),\n          title: String(index + 1), // 순서를 마커의 title로 설정합니다.\n        });\n\n        marker.setMap(map); // 마커를 지도에 추가합니다.\n        return marker;\n      });\n\n      const bounds = new kakao.maps.LatLngBounds();\n      markerPositions.forEach((marker) => {\n        bounds.extend(marker.getPosition());\n      });\n\n      const center = getCenterFromBounds(bounds);\n\n      const options = {\n        center: center,\n        level: 10,\n      };\n      const map = new kakao.maps.Map(container, options);\n    }\n  }, [props.responseData]);\n\n  function getCenterFromBounds(bounds) {\n    const ne = bounds.getNorthEast();\n    const sw = bounds.getSouthWest();\n    const centerLat = (ne.getLat() + sw.getLat()) / 2;\n    const centerLng = (ne.getLng() + sw.getLng()) / 2;\n    return new kakao.maps.LatLng(centerLat, centerLng);\n  }\n\n  return <div id=\"map\"></div>;\n}\n\nexport default KakaoMap;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAM;EAAEC;AAAM,CAAC,GAAGC,MAAM;AAExB,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACvBP,SAAS,CAAC,MAAM;IACd,MAAMQ,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC;IAEhD,IAAIJ,KAAK,CAACK,YAAY,IAAIC,KAAK,CAACC,OAAO,CAACP,KAAK,CAACK,YAAY,CAAC,EAAE;MAC3D,MAAMG,eAAe,GAAGR,KAAK,CAACK,YAAY,CAACI,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;QAC9D,MAAMC,QAAQ,GAAGF,IAAI,CAACE,QAAQ;QAC9B,MAAMC,SAAS,GAAGH,IAAI,CAACG,SAAS;QAEhC,MAAMC,MAAM,GAAG,IAAIjB,KAAK,CAACkB,IAAI,CAACC,MAAM,CAAC;UACnCC,QAAQ,EAAE,IAAIpB,KAAK,CAACkB,IAAI,CAACG,MAAM,CAACN,QAAQ,EAAEC,SAAS,CAAC;UACpDM,KAAK,EAAEC,MAAM,CAACT,KAAK,GAAG,CAAC,CAAC,CAAE;QAC5B,CAAC,CAAC;;QAEFG,MAAM,CAACO,MAAM,CAACZ,GAAG,CAAC,CAAC,CAAC;QACpB,OAAOK,MAAM;MACf,CAAC,CAAC;MAEF,MAAMQ,MAAM,GAAG,IAAIzB,KAAK,CAACkB,IAAI,CAACQ,YAAY,EAAE;MAC5Cf,eAAe,CAACgB,OAAO,CAAEV,MAAM,IAAK;QAClCQ,MAAM,CAACG,MAAM,CAACX,MAAM,CAACY,WAAW,EAAE,CAAC;MACrC,CAAC,CAAC;MAEF,MAAMC,MAAM,GAAGC,mBAAmB,CAACN,MAAM,CAAC;MAE1C,MAAMO,OAAO,GAAG;QACdF,MAAM,EAAEA,MAAM;QACdG,KAAK,EAAE;MACT,CAAC;MACD,MAAMrB,GAAG,GAAG,IAAIZ,KAAK,CAACkB,IAAI,CAACgB,GAAG,CAAC7B,SAAS,EAAE2B,OAAO,CAAC;IACpD;EACF,CAAC,EAAE,CAAC7B,KAAK,CAACK,YAAY,CAAC,CAAC;EAExB,SAASuB,mBAAmBA,CAACN,MAAM,EAAE;IACnC,MAAMU,EAAE,GAAGV,MAAM,CAACW,YAAY,EAAE;IAChC,MAAMC,EAAE,GAAGZ,MAAM,CAACa,YAAY,EAAE;IAChC,MAAMC,SAAS,GAAG,CAACJ,EAAE,CAACK,MAAM,EAAE,GAAGH,EAAE,CAACG,MAAM,EAAE,IAAI,CAAC;IACjD,MAAMC,SAAS,GAAG,CAACN,EAAE,CAACO,MAAM,EAAE,GAAGL,EAAE,CAACK,MAAM,EAAE,IAAI,CAAC;IACjD,OAAO,IAAI1C,KAAK,CAACkB,IAAI,CAACG,MAAM,CAACkB,SAAS,EAAEE,SAAS,CAAC;EACpD;EAEA,oBAAO1C,OAAA;IAAK4C,EAAE,EAAC;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAO;AAC7B;AAAC3C,EAAA,CA1CQF,QAAQ;AAAA8C,EAAA,GAAR9C,QAAQ;AA4CjB,eAAeA,QAAQ;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}