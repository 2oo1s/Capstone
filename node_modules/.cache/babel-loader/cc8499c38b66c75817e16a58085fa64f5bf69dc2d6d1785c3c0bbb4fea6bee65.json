{"ast":null,"code":"var _jsxFileName = \"/Users/leejoowon/Documents/GitHub/Capstone/src/components/Route.jsx\";\nimport PlaceWithBtn from \"./PlaceWithBtn\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Route(props) {\n  // 선택된 날짜에 따라 다른 내용을 보여줌\n  const renderRouteContent = () => {\n    if (props.selectedDay === 1) {\n      //const items = props.responseData.day1_items.slice(1); // index 1부터 잘라냄\n      return (\n        /*#__PURE__*/\n        // <div className=\"allRoute\">\n        //   {items.map((item) => (\n        //     <PlaceWithBtn item={item} />\n        //   ))}\n        // </div>\n        _jsxDEV(\"div\", {\n          className: \"allRoute\",\n          children: props.responseData.day1_items.map(item => /*#__PURE__*/_jsxDEV(PlaceWithBtn, {\n            item: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 9\n        }, this)\n      );\n    } else if (props.selectedDay === 2) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"allRoute\",\n        children: props.responseData.day2_items.map(item => /*#__PURE__*/_jsxDEV(PlaceWithBtn, {\n          item: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this);\n    } else if (props.selectedDay === 3) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"allRoute\",\n        children: props.responseData.day3_items.map(item => /*#__PURE__*/_jsxDEV(PlaceWithBtn, {\n          item: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Route\",\n    children: renderRouteContent()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 10\n  }, this);\n}\n_c = Route;\nexport default Route;\nvar _c;\n$RefreshReg$(_c, \"Route\");","map":{"version":3,"names":["PlaceWithBtn","jsxDEV","_jsxDEV","Route","props","renderRouteContent","selectedDay","className","children","responseData","day1_items","map","item","fileName","_jsxFileName","lineNumber","columnNumber","day2_items","day3_items","_c","$RefreshReg$"],"sources":["/Users/leejoowon/Documents/GitHub/Capstone/src/components/Route.jsx"],"sourcesContent":["import PlaceWithBtn from \"./PlaceWithBtn\";\n\nfunction Route(props) {\n  // 선택된 날짜에 따라 다른 내용을 보여줌\n  const renderRouteContent = () => {\n    if (props.selectedDay === 1) {\n      //const items = props.responseData.day1_items.slice(1); // index 1부터 잘라냄\n      return (\n        // <div className=\"allRoute\">\n        //   {items.map((item) => (\n        //     <PlaceWithBtn item={item} />\n        //   ))}\n        // </div>\n        <div className=\"allRoute\">\n          {props.responseData.day1_items.map((item) => (\n            <PlaceWithBtn item={item} />\n          ))}\n        </div>\n      );\n    } else if (props.selectedDay === 2) {\n      return (\n        <div className=\"allRoute\">\n          {props.responseData.day2_items.map((item) => (\n            <PlaceWithBtn item={item} />\n          ))}\n        </div>\n      );\n    } else if (props.selectedDay === 3) {\n      return (\n        <div className=\"allRoute\">\n          {props.responseData.day3_items.map((item) => (\n            <PlaceWithBtn item={item} />\n          ))}\n        </div>\n      );\n    }\n  };\n  return <div className=\"Route\">{renderRouteContent()}</div>;\n}\n\nexport default Route;\n"],"mappings":";AAAA,OAAOA,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,KAAKA,CAACC,KAAK,EAAE;EACpB;EACA,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAID,KAAK,CAACE,WAAW,KAAK,CAAC,EAAE;MAC3B;MACA;QAAA;QACE;QACA;QACA;QACA;QACA;QACAJ,OAAA;UAAKK,SAAS,EAAC,UAAU;UAAAC,QAAA,EACtBJ,KAAK,CAACK,YAAY,CAACC,UAAU,CAACC,GAAG,CAAEC,IAAI,iBACtCV,OAAA,CAACF,YAAY;YAACY,IAAI,EAAEA;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAC1B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACE;IAEV,CAAC,MAAM,IAAIZ,KAAK,CAACE,WAAW,KAAK,CAAC,EAAE;MAClC,oBACEJ,OAAA;QAAKK,SAAS,EAAC,UAAU;QAAAC,QAAA,EACtBJ,KAAK,CAACK,YAAY,CAACQ,UAAU,CAACN,GAAG,CAAEC,IAAI,iBACtCV,OAAA,CAACF,YAAY;UAACY,IAAI,EAAEA;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC1B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACE;IAEV,CAAC,MAAM,IAAIZ,KAAK,CAACE,WAAW,KAAK,CAAC,EAAE;MAClC,oBACEJ,OAAA;QAAKK,SAAS,EAAC,UAAU;QAAAC,QAAA,EACtBJ,KAAK,CAACK,YAAY,CAACS,UAAU,CAACP,GAAG,CAAEC,IAAI,iBACtCV,OAAA,CAACF,YAAY;UAACY,IAAI,EAAEA;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC1B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACE;IAEV;EACF,CAAC;EACD,oBAAOd,OAAA;IAAKK,SAAS,EAAC,OAAO;IAAAC,QAAA,EAAEH,kBAAkB;EAAE;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAO;AAC5D;AAACG,EAAA,GApCQhB,KAAK;AAsCd,eAAeA,KAAK;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}